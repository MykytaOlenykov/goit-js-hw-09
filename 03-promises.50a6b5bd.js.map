{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAQH,EAAQE,cAAc,yBA0BpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAlCbN,EAAQc,iBAAiB,UAAUC,IACjCA,EAAEC,iBACFb,EAAMc,aAAa,WAAY,IAE/B,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAEN,IAAIC,EAAeC,OAAOjB,EAAMkB,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCrB,EAAcqB,EAAGH,GACdI,MAAKF,GAAS1B,EAAA6B,OAAOC,QAAQJ,KAC7BK,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD,KAC9BE,SAAQ,KACHT,OAAOH,EAAOI,SAAWC,GAC3BtB,EAAM8B,gBAAgB,WAAW,IAIvCX,GAAgBC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst btnEl = formRef.querySelector('button[type=\"submit\"]');\n\nformRef.addEventListener('submit', e => {\n  e.preventDefault();\n  btnEl.setAttribute('disabled', '');\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error))\n      .finally(() => {\n        if (Number(amount.value) === i) {\n          btnEl.removeAttribute('disabled');\n        }\n      });\n\n    currentDelay += Number(step.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$btnEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","setAttribute","elements","step","amount","currentTarget","currentDelay","Number","value","i","then","Notify","success","catch","error","failure","finally","removeAttribute"],"version":3,"file":"03-promises.50a6b5bd.js.map"}