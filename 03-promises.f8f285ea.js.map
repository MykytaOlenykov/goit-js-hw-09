{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAQH,EAAQE,cAAc,yBAEpCF,EAAQI,iBAAiB,UAAU,SAAAC,G,mBA0CnC,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,KAjCHS,CAAcC,EAAGC,GACdC,MAAK,SAAAC,G,OAAStB,EAAAuB,OAAOC,QAAQF,E,IAC7BG,OAAM,SAAAC,G,OAAS1B,EAAAuB,OAAOI,QAAQD,E,IAC9BE,SAAQ,WACHC,OAAOC,EAAOR,SAAWH,GAC3Bd,EAAM0B,gBAAgB,W,IAI5BX,GAAgBS,OAAOG,EAAKV,M,EA3B9Bf,EAAE0B,iBACF5B,EAAM6B,aAAa,WAAY,IAE/B,IAEmBC,EAAf5B,EAAE6B,cADJC,SAAY5B,EAAK0B,EAAL1B,MAAOuB,EAAIG,EAAJH,KAAMF,EAAMK,EAANL,OAK3B,GAsBF,SAAwBrB,EAAOuB,EAAMF,IAC/BrB,EAAQ,GAAKuB,EAAO,GAAKF,EAAS,IACpC9B,EAAAuB,OAAOI,QAAQ,iCAGZG,GACH9B,EAAAuB,OAAOI,QAAQ,+B,CA9BjBW,CAAeT,OAAOpB,EAAMa,OAAQO,OAAOG,EAAKV,OAAQO,OAAOC,EAAOR,QAElEO,OAAOC,EAAOR,QAAU,EAC1BjB,EAAM0B,gBAAgB,iBAOxB,IAFA,IAAIX,EAAeS,OAAOpB,EAAMa,OAEvBiB,EAAI,EAAGA,GAAKT,EAAOR,MAAOiB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst btnEl = formRef.querySelector('button[type=\"submit\"]');\n\nformRef.addEventListener('submit', e => {\n  e.preventDefault();\n  btnEl.setAttribute('disabled', '');\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  formValidation(Number(delay.value), Number(step.value), Number(amount.value));\n\n  if (Number(amount.value) <= 0) {\n    btnEl.removeAttribute('disabled');\n\n    return;\n  }\n\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error))\n      .finally(() => {\n        if (Number(amount.value) === i) {\n          btnEl.removeAttribute('disabled');\n        }\n      });\n\n    currentDelay += Number(step.value);\n  }\n});\n\nfunction formValidation(delay, step, amount) {\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notify.failure('Negative numbers are invalid.');\n  }\n\n  if (!amount) {\n    Notify.failure('Create at least one promise.');\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$btnEl","addEventListener","e","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","i","currentDelay","then","value","Notify","success","catch","error","failure","finally","Number","amount","removeAttribute","step","preventDefault","setAttribute","_elements","currentTarget","elements","$ce04d3a99e08e73b$var$formValidation","i1","_loop"],"version":3,"file":"03-promises.f8f285ea.js.map"}